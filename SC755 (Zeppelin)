%sql
--Sc755-HDP version --working version
WITH r1 AS ( SELECT DISTINCT
cast(ln_nbr AS INT ),
description,
item_id, cast(code_seq AS INT ) AS code_seq,
SUM(amt) AS amt -- to change to ROUND(SUM(amt),2)
FROM ( SELECT DISTINCT --this is the first portion of the UNION in original code. the second portion was to get the sum for lines with 'TOTAL' which is replaced with code below [1] and [2]. In HDP's r1_table, there's no result for second portion
sc755_dtl_ln_nbr AS ln_nbr,
sc755_dtl_item_id AS item_id,
CASE WHEN sc755_dtl_item_id IN ('2-01', '2-02', '2-03', '2-04', '2-05', '2-07', '3-01', '3-02', '3-03', '3-04', '3-11', '3-21', '3-31', '9-01', '9-02', '10-0', '11-01')
THEN SUM(stat_amt)
ELSE Round(SUM(stat_amt) / 1000, 0) END AS amt, --to change to ELSE SUM(stat_amt)/1000 END AS amt
st_abrv,
x.code_valu_3 AS description, x.code_seq
FROM xlat_table x, r1_table t -->change to r1_table2 for PROD311 r1 table
WHERE cast(t.sc755_dtl_ln_nbr AS INT )=x.code_valu AND x.code_1='R1LNNBR' AND sc755_dtl_ln_nbr IS NOT NULL AND sc755_dtl_ln_nbr !='\\N' AND sc755_dtl_item_id=x.code_valu_2
AND rpt_mo = ${rpt_mo=1,1|2|3|4|5|6|8|9|10|11|12}
AND rpt_yr = ${rpt_yr=2016, 2016|2015|2014}
GROUP BY sc755_dtl_item_id, sc755_dtl_ln_nbr, st_abrv, x.code_valu_3, code_seq)
query
GROUP BY ln_nbr, item_id, description, code_seq ORDER BY ln_nbr )
SELECT
  ln_nbr,
  CONCAT(item_id, ' ', description) AS line_desc,
  amt
FROM (
       -- [1] to get TOTAL lines - sum of some lines
       SELECT
         ln_nbr,
         x.code_valu_3            AS description,
         x.code_valu_2            AS item_id,
         x.code_seq               AS code_seq,
         ROUND(sum(sub_total), 0) AS amt
       FROM (
              SELECT
                CASE WHEN r1.ln_nbr IN (2, 3, 4)
                  THEN 5
                WHEN r1.ln_nbr IN (8, 9, 10)
                  THEN 11
                WHEN r1.ln_nbr BETWEEN 15 AND 29
                  THEN 30
                WHEN r1.ln_nbr BETWEEN 31 AND 45
                  THEN 46
                WHEN r1.ln_nbr BETWEEN 47 AND 63
                  THEN 64
                WHEN r1.ln_nbr BETWEEN 65 AND 81
                  THEN 82
                WHEN r1.ln_nbr BETWEEN 85 AND 87
                  THEN 88
                WHEN r1.ln_nbr BETWEEN 98 AND 103
                  THEN 104
                WHEN r1.ln_nbr BETWEEN 105 AND 106
                  THEN 107
                WHEN r1.ln_nbr BETWEEN 108 AND 109
                  THEN 110
                WHEN r1.ln_nbr BETWEEN 111 AND 112
                  THEN 113
                WHEN r1.ln_nbr BETWEEN 126 AND 128
                  THEN 129
                WHEN r1.ln_nbr BETWEEN 130 AND 132
                  THEN 133
                ELSE '9999'
                END AS ln_nbr,
                amt AS sub_total
              FROM r1) t, xlat_table x
       WHERE x.code_1 = 'R1LNNBR' AND ln_nbr != '9999' AND ln_nbr = x.code_valu
       GROUP BY t.ln_nbr, x.code_valu_3, x.code_valu_2, x.code_seq

       UNION
       --[2]TOTAL lines with overlap line nbr
       SELECT
         ln_nbr,
         x.code_valu_3  AS description,
         x.code_valu_2  AS item_id,
         x.code_seq,
         sum(sub_total) AS amt
       FROM (
              SELECT
                CASE WHEN r1.ln_nbr IN (2, 3, 4, 6)
                  THEN 7
                WHEN r1.ln_nbr IN (8, 9, 10, 12, 13)
                  THEN 14
                WHEN r1.ln_nbr IN (108, 109, 111, 112)
                  THEN 114
                ELSE '9999'
                END AS ln_nbr,
                amt AS sub_total
              FROM r1) t, xlat_table x
       WHERE x.code_1 = 'R1LNNBR' AND ln_nbr != '9999' AND ln_nbr = x.code_valu
       GROUP BY t.ln_nbr, x.code_valu_3, x.code_valu_2, x.code_seq

       UNION
       --[3]to get rows that resemble labels n total
       SELECT
         cast(code_valu AS INT) AS ln_nbr,
         code_valu_3            AS description,
         CASE WHEN code_valu_2 = 'null'
           THEN ''
         ELSE code_valu_2 END   AS item_id,
         code_seq,
         0                      AS amt
       FROM xlat_table
       WHERE code_1 = 'R1LNNBR' AND
             (code_valu_3 LIKE 'TOTAL%' OR code_valu_2 LIKE '%.' OR code_valu_2 IS NULL OR code_valu_2 = 'null') AND
             code_valu_3 NOT LIKE '%(lines%'

       UNION
       --[4]to get previous results saved as r1
       SELECT * FROM r1
     ) main_tbl
ORDER BY cast(ln_nbr AS INT), code_seq
